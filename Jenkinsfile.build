@Library(value='ivanPipelineLibs@BumpVersionWork', changelog=false) _

def p

pipeline {
    agent {
        node {
            label 'project:any'
        }
    }
    parameters {
        choice(choices: ['snapshots', 'releases'], description: 'type of build', name: 'BUILD_TYPE')
    }
    stages {
        stage('clean workspace') {
            steps {
                script {
                    pipelineUtils.cleanWorkspace()
                }
            }
        }
        stage('checkout source') {
            steps {
                script {
                    pipelineUtils.cloneGitRepo()
                }
                script {
                    p = pipelineCfg('pipeline.yml')
                }
            }
        }
        stage('create virtualenv') {
            steps {
                script {
                    pipelineUtils.setUpPythonVirtualEnv()
                    pipelineUtils.pipInstall('--only-binary=bumpversion bumpversion==0.5.3')
                }
            }
        }
        stage('build server docker image') {
            steps {
                script {
                    dockerPipeline.buildDockerArtifact(p.artifactoryPath, p.gitlabPath, p.dockerImageName, './')
                }
            }
        }
        stage('publish docker images') {
            steps {
                script {
                    dockerPipeline.publishDockerImages(p.artifactoryPath, p.gitlabPath)
                }
            }
        }
        stage('push to git') {
            steps {
                script {
                    if ("${params.BUILD_TYPE}" == "releases") {
                        pipelineUtils.bumpVersion()
                    }
                    pipelineUtils.pushToGitRepo(p.gitRepoUrl, p.gitRepoCredentialsId)
                }
            }
        }
    }
}
